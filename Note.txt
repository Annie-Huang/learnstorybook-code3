https://www.learnstorybook.com/intro-to-storybook/
https://www.learnstorybook.com/intro-to-storybook/react/en/data/
https://storybook.js.org/tutorials/intro-to-storybook/react/en/get-started/     <<< This tutorial mainly follow this...

https://github.com/Annie-Huang/learnstorybook-code3

https://storybook.js.org/
https://www.learnstorybook.com/
https://storybook.js.org/docs/react/writing-stories/decorators
https://storybook.js.org/docs/react/writing-stories/args#args-composition

https://github.com/styleguidist/react-docgen-typescript
https://github.com/reactjs/react-docgen

To Read list:
https://www.componentdriven.org/    The "Component Driven Development", "Atomic Design" "Design System Handbook"

TODO List:
===============
- Find out how to create storybook in SCSS
- Find out how to use storybook in styled-component.
- Find out how to change storybook into using typescript.

- Why OTC library -> Canvas tab doesn't have Actions | Controls tabs at the bottom?

##############################################################################
Up to:
https://storybook.js.org/docs/react/get-started/introduction
https://storybook.js.org/tutorials/
https://storybook.js.org/tutorials/intro-to-storybook/react/en/using-addons/

-------------------------

C:\react>npx degit chromaui/intro-storybook-react-template learnstorybook-code3
C:\react\learnstorybook-code3>npm install

C:\react\learnstorybook-code3>npm run test --watchAll
C:\react\learnstorybook-code3>npm run storybook         << http://localhost:6006/
C:\react\learnstorybook-code3>npm run start             << http://localhost:3000    < Show create-react-app page.
C:\react\learnstorybook-code3>npm install @storybook/addon-storyshots react-test-renderer --save-dev
C:\react\learnstorybook-code3>npm install react-redux redux
C:\react\learnstorybook-code3>npm install prop-types --save-dev
C:\react\learnstorybook-code3>npm install @storybook/addon-a11y --save-dev
C:\react\learnstorybook-code3>npm install storybook-addon-designs --save-dev --force
C:\react\learnstorybook-code3>npx sb upgrade

Override eslintConfig in package.json to get rid of no-anonymous-default-export specified in .eslintcache


##############################################################################

Section2:
https://www.learnstorybook.com/intro-to-storybook/react/en/simple-component/
- Need to read "argTypes -- specify the args behavior in each story." page
- Understand what is "Actions help you verify interactions when building UI components in isolation. Oftentimes you won't have access to the functions and state you have in context of the app. Use action() to stub them in."
- Read parameters page in "parameters are typically used to control the behavior of Storybook's features and addons. In our case we're going to use them to configure how the actions (mocked callbacks) are handled."

Section3:
https://www.learnstorybook.com/intro-to-storybook/react/en/composite-component/
- Need to understand Decorators " Decorators are a way to provide arbitrary wrappers to stories. In this case we‚Äôre using a decorator `key` on the default export to add some `padding` around the rendered component. They can also be used to wrap stories in ‚Äúproviders‚Äù ‚Äìi.e. library components that set React context."
- Read compose info "By importing TaskStories, we were able to compose the arguments (args for short) in our stories with minimal effort. "


##############################################################################

1. default export:
--------------------
component       -- the component itself,
title           -- how to refer to the component in the sidebar of the Storybook app,
excludeStories  -- exports in the story file that should not be rendered as stories by Storybook.
argTypes        -- specify the args behavior in each story.
decorators:     [ ... ],
parameters:     { ... }

2. Sample of argTypes:
--------------------------
const argTypes = {
  label: {
    name: 'label',
    type: { name: 'string', required: false },
    defaultValue: 'Hello',
    description: 'overwritten description',
    table: {
      type: {
          summary: 'something short',
          detail: 'something really really long'
      },
      defaultValue: { summary: 'Hello' },
    },
    control: {
      type: null
    }
  }
}

3. Decorators
-----------------------
https://storybook.js.org/docs/react/writing-stories/decorators
A decorator is a way to wrap a story in extra ‚Äúrendering‚Äù functionality.

Part 1: Wrap stories with extra markup:
story decorator:
    export const Primary = ‚Ä¶
    Primary.decorators = [(Story) => <div style={{ margin: '3em' }}><Story/></div>]

Component decorator:
    export default {
      component: TaskList,
      title: 'TaskList',
      decorators: [story => <div style={{ padding: '3rem' }}>{story()}</div>],
    };

Global decorator:
    We can also set a decorator for all stories via the decorators export of your .storybook/preview.js file:
    export const decorators = [
      (Story) => (
        <div style={{ margin: '3em' }}>
          <Story />
        </div>
      ),
    ];

All decorators, defined at all levels that apply to a story will run whenever that story is rendered, in the order:
Global decorators, in the order they are defined
Component decorators, in the order they are defined
Story decorators, in the order they are defined.

Part 2: ‚ÄúContext‚Äù for mocking (see point 5)

4. You can use story's args in the test file:
----------------------------------------------
In C:\react\learnstorybook-code3\src\components\TaskList.test.js:
    import { WithPinnedTasks } from './TaskList.stories'; //üëà  Our story imported here
    ReactDOM.render(<WithPinnedTasks {...WithPinnedTasks.args} />, div);


5. Nested container components
----------------------------------------------
e.g. The TaskList component is a container that renders the PureTaskList presentational component.
     And InboxScreen component is simply wrapping the TaskList component.
Solution: Supplying context with decorators

    import { Provider } from 'react-redux';
    import { action } from '@storybook/addon-actions';
    // A super-simple mock of a redux store
    const store = {
      getState: () => {
       return {
           tasks: TaskListStories.Default.args.tasks,
         };
      },
      subscribe: () => 0,
      dispatch: action('dispatch'),
    };

    export default {
      component: PureInboxScreen,
      decorators: [story => <Provider store={store}>{story()}</Provider>],
      title: 'InboxScreen',
    };
    ----------------
    Or Need to use styled-component theme:
    import { ThemeProvider } from 'styled-components';
    export const decorators = [
      (Story) => (
        <ThemeProvider theme="default">
          <Story />
        </ThemeProvider>
      ),
    ];


6. storybook command options:
----------------------------------------------
https://storybook.js.org/docs/react/api/cli-options

CurrentProject:
    "build-storybook": "build-storybook -s public"
OTC:
    "build-storybook": "node storybook-versioning.js && build-storybook -c .storybook -o .storybook-build -s ./src/assets",
    build-storybook:
    -c .storybook -o .storybook-build -s ./src/assets",

-c, --config-dir [dir-name]
    Directory where to load Storybook configurations from
    build-storybook -c .storybook

-o, --output-dir [dir-name]
    Directory where to store built files
    build-storybook -o /my-deployed-storybook

-s, --static-dir <dir-names>
    Directory where to load static files from, comma-separated list
    build-storybook -s public


CurrentProject:
    "storybook": "start-storybook -p 6006 -s public",
OTC:
    "storybook": "start-storybook -s ./src/assets -p 6006 --quiet",
    start-storybook
    -s ./src/assets -p 6006 --quiet

-s, --static-dir <dir-names>
    Directory where to load static files from, comma-separated list
    start-storybook -s public

-p, --port [number]
    Port to run Storybook
    start-storybook -p 9009

--quiet
    Suppress verbose build output
    start-storybook --quiet

In OTC, version also list in:
C:\Temp\otc-ui-component-library\src\introduction.stories.mdx
C:\Temp\otc-ui-component-library\storybook-versioning.js
C:\Temp\otc-ui-component-library\.storybook\manager-head_template.html
C:\Temp\otc-ui-component-library\.storybook\manager-head.html



7. Addons
----------------------------------------------
https://storybook.js.org/addons
https://github.com/storybookjs/storybook/blob/master/ADDONS_SUPPORT.md


7.1. Addons -- Add Figma design
----------------------------------------------
https://storybook.js.org/addons/storybook-addon-designs

    npm install --save-dev storybook-addon-designs@alpha

    // .storybook/main.js
    module.exports = {
      addons: ['storybook-addon-designs'],
    }

    In xx.stories.tsx
    parameters: {
      notes,
      design: {
        type: "figma",
        url: "https://www.figma.com/file/IKgyiORITF0gKid1JDmXqU/%5BNEW%5D-POST%2B-Sticker-sheet?node-id=2925%3A41939",
      },
    },

7.2. Addons -- Story Links Addon
----------------------------------------------
The Storybook Links addon can be used to create links that navigate between stories in Storybook.
https://storybook.js.org/addons/@storybook/addon-links

    yarn add -D @storybook/addon-links
    module.exports = {
      addons: ['@storybook/addon-links']
    }

7.3. Addons -- storybook-addon-a11y
----------------------------------------------
This storybook addon can be helpful to make your UI components more accessible.
https://storybook.js.org/addons/@storybook/addon-a11y

    yarn add @storybook/addon-a11y --dev
    module.exports = {
      addons: ['@storybook/addon-a11y'],
    };


7.4. Addons -- storybook-addon-designs
----------------------------------------------
https://storybook.js.org/addons/storybook-addon-designs/
https://pocka.github.io/storybook-addon-designs/?path=/docs/docs-quick-start--page
https://pocka.github.io/storybook-addon-designs/?path=/docs/docs-figma-readme--page
https://pocka.github.io/storybook-addon-designs/?path=/docs/docs-link-examples--set-label
https://pocka.github.io/storybook-addon-designs/?path=/docs/docs-advanced-usage--embed-multiple-designs

    yarn add -D storybook-addon-designs
    // .storybook/main.js
    module.exports = {
      addons: ['storybook-addon-designs'],
    }

    YOu can do like this:
      design: {
        type: 'figma',
        url:
          'https://www.figma.com/file/Klm6pxIZSaJFiOMX5FpTul9F/storybook-addon-designs-sample',
      },
      design: {
        type: 'link',
        url:
          'https://www.figma.com/file/Klm6pxIZSaJFiOMX5FpTul9F/storybook-addon-designs-sample',
        label: 'Open design in new tab',
      },
      design: [
        {
          name: 'Foo',
          type: 'figma',
          url:
            'https://www.figma.com/file/Klm6pxIZSaJFiOMX5FpTul9F/storybook-addon-designs-sample',
        },
        {
          name: 'Bar',
          type: 'link',
          url:
            'https://www.figma.com/file/Klm6pxIZSaJFiOMX5FpTul9F/storybook-addon-designs-sample',
        },
      ],
